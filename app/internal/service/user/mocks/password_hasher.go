// Code generated by mockery v2.42.0. DO NOT EDIT.

package mockuserservice

import mock "github.com/stretchr/testify/mock"

// MockPasswordHasher is an autogenerated mock type for the PasswordHasher type
type MockPasswordHasher struct {
	mock.Mock
}

type MockPasswordHasher_Expecter struct {
	mock *mock.Mock
}

func (_m *MockPasswordHasher) EXPECT() *MockPasswordHasher_Expecter {
	return &MockPasswordHasher_Expecter{mock: &_m.Mock}
}

// GenerateFromPassword provides a mock function with given fields: password, cost
func (_m *MockPasswordHasher) GenerateFromPassword(password []byte, cost int) ([]byte, error) {
	ret := _m.Called(password, cost)

	if len(ret) == 0 {
		panic("no return value specified for GenerateFromPassword")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte, int) ([]byte, error)); ok {
		return rf(password, cost)
	}
	if rf, ok := ret.Get(0).(func([]byte, int) []byte); ok {
		r0 = rf(password, cost)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func([]byte, int) error); ok {
		r1 = rf(password, cost)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockPasswordHasher_GenerateFromPassword_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateFromPassword'
type MockPasswordHasher_GenerateFromPassword_Call struct {
	*mock.Call
}

// GenerateFromPassword is a helper method to define mock.On call
//   - password []byte
//   - cost int
func (_e *MockPasswordHasher_Expecter) GenerateFromPassword(password interface{}, cost interface{}) *MockPasswordHasher_GenerateFromPassword_Call {
	return &MockPasswordHasher_GenerateFromPassword_Call{Call: _e.mock.On("GenerateFromPassword", password, cost)}
}

func (_c *MockPasswordHasher_GenerateFromPassword_Call) Run(run func(password []byte, cost int)) *MockPasswordHasher_GenerateFromPassword_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].(int))
	})
	return _c
}

func (_c *MockPasswordHasher_GenerateFromPassword_Call) Return(_a0 []byte, _a1 error) *MockPasswordHasher_GenerateFromPassword_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockPasswordHasher_GenerateFromPassword_Call) RunAndReturn(run func([]byte, int) ([]byte, error)) *MockPasswordHasher_GenerateFromPassword_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockPasswordHasher creates a new instance of MockPasswordHasher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockPasswordHasher(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockPasswordHasher {
	mock := &MockPasswordHasher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
