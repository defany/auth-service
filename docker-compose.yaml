version: '3'

volumes:
  postgres_volume:
  prometheus_data:
  grafana_data:

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
      - "./rules.yml:/etc/prometheus/rules.yml"
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
  node-exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"

  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  postgres:
    image: postgres:16.1-alpine3.19
    environment:
      - "POSTGRES_DB=${PG_DATABASE_NAME}"
      - "POSTGRES_USER=${PG_USER}"
      - "POSTGRES_PASSWORD=${PG_PASSWORD}"
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${PG_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    build:
      context: .
      dockerfile: migrator.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      CONFIG_PATH: ./compose.json
      DB_HOST: postgres

  server:
    environment:
      CONFIG_PATH: ./compose.json
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7000:7000"
      - "8000:8000"
      - "9000:9000"
      - "10000:10000"
    # Не придумал как ожидать завершения мигратора
    depends_on:
      postgres:
        condition: service_healthy