syntax = 'proto3';

package auth.v1;

option go_package = 'github.com/defany/auth-service/proto/pkg/auth_v1;auth_v1';

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";

service Auth {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  /* https://buf.build/docs/lint/rules#rpc_request_response */
  // buf:lint:ignore RPC_SAME_RESPONSE_TYPE
  rpc UpdateUser(UpdateUserRequest) returns (google.protobuf.Empty);
  /* https://buf.build/docs/lint/rules#rpc_request_response */
  // buf:lint:ignore RPC_SAME_RESPONSE_TYPE
  rpc DeleteUser(DeleteUserRequest) returns (google.protobuf.Empty);
}

enum UserRole {
  UNKNOWN = 0;
  USER = 1;
  ADMIN = 2;
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string password_confirm = 4;
  UserRole role = 5;
}

message CreateUserResponse {
  int64 id = 1;
}

message GetUserRequest {
  int64 id = 1;
}

message GetUserResponse {
  int64 id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
  string password_confirm = 5;
  UserRole role = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

message UpdateUserRequest {
  int64 id = 1;
  google.protobuf.StringValue name = 2;
  google.protobuf.StringValue email = 3;
  optional UserRole role = 4; /* optional, т.к. роль тоже не всегда нужно обновлять */
}

message DeleteUserRequest {
  int64 id = 1;
}